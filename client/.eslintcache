[{"C:\\Users\\vogia\\WebstormProjects\\movie_theater_management_system\\client\\src\\index.js":"1","C:\\Users\\vogia\\WebstormProjects\\movie_theater_management_system\\client\\src\\App.js":"2","C:\\Users\\vogia\\WebstormProjects\\movie_theater_management_system\\client\\src\\reportWebVitals.js":"3","C:\\Users\\vogia\\WebstormProjects\\movie_theater_management_system\\client\\src\\navigation.jsx":"4","C:\\Users\\vogia\\WebstormProjects\\movie_theater_management_system\\client\\src\\components\\login\\LoginPage.jsx":"5","C:\\Users\\vogia\\WebstormProjects\\movie_theater_management_system\\client\\src\\components\\login\\RegisterPage.jsx":"6","C:\\Users\\vogia\\WebstormProjects\\movie_theater_management_system\\client\\src\\localVariables.js":"7","C:\\Users\\vogia\\WebstormProjects\\movie_theater_management_system\\client\\src\\components\\HomePage.jsx":"8","C:\\Users\\vogia\\WebstormProjects\\movie_theater_management_system\\client\\src\\components\\profile\\UserProfile.jsx":"9","C:\\Users\\vogia\\WebstormProjects\\movie_theater_management_system\\client\\src\\components\\CardView\\CardView.jsx":"10","C:\\Users\\vogia\\WebstormProjects\\movie_theater_management_system\\client\\src\\components\\CardView\\ListCard.jsx":"11","C:\\Users\\vogia\\WebstormProjects\\movie_theater_management_system\\client\\src\\components\\carousel\\HomePageCarousel.jsx":"12","C:\\Users\\vogia\\WebstormProjects\\movie_theater_management_system\\client\\src\\components\\CardView\\CardDetail.jsx":"13","C:\\Users\\vogia\\WebstormProjects\\movie_theater_management_system\\client\\src\\components\\category\\CategoryList.jsx":"14","C:\\Users\\vogia\\WebstormProjects\\movie_theater_management_system\\client\\src\\components\\modal\\SeatBookingModal.jsx":"15","C:\\Users\\vogia\\WebstormProjects\\movie_theater_management_system\\client\\src\\components\\seat\\Seat.jsx":"16","C:\\Users\\vogia\\WebstormProjects\\movie_theater_management_system\\client\\src\\components\\listItems\\UserList.jsx":"17","C:\\Users\\vogia\\WebstormProjects\\movie_theater_management_system\\client\\src\\components\\modal\\UserDetail.jsx":"18","C:\\Users\\vogia\\WebstormProjects\\movie_theater_management_system\\client\\src\\components\\listItems\\MovieList.jsx":"19","C:\\Users\\vogia\\WebstormProjects\\movie_theater_management_system\\client\\src\\components\\modal\\MovieDetailModal.jsx":"20","C:\\Users\\vogia\\WebstormProjects\\movie_theater_management_system\\client\\src\\components\\showtime\\ShowTime.jsx":"21","C:\\Users\\vogia\\WebstormProjects\\movie_theater_management_system\\client\\src\\components\\modal\\ShowTimeModal.jsx":"22","C:\\Users\\vogia\\WebstormProjects\\movie_theater_management_system\\client\\src\\components\\modal\\AddNewScreeningModal.jsx":"23","C:\\Users\\vogia\\WebstormProjects\\movie_theater_management_system\\client\\src\\components\\modal\\AddNewMovieModal.jsx":"24","C:\\Users\\vogia\\WebstormProjects\\movie_theater_management_system\\client\\src\\components\\listItems\\PotentialUsers.jsx":"25","C:\\Users\\vogia\\WebstormProjects\\movie_theater_management_system\\client\\src\\components\\modal\\MovieDeleteModal.jsx":"26"},{"size":486,"mtime":1610801638695,"results":"27","hashOfConfig":"28"},{"size":2837,"mtime":1610801545488,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":499162500000,"results":"30","hashOfConfig":"28"},{"size":2859,"mtime":1610707202381,"results":"31","hashOfConfig":"28"},{"size":4554,"mtime":1610104036399,"results":"32","hashOfConfig":"28"},{"size":9123,"mtime":1610800421219,"results":"33","hashOfConfig":"28"},{"size":2379,"mtime":1611497982891,"results":"34","hashOfConfig":"28"},{"size":1833,"mtime":1610539991410,"results":"35","hashOfConfig":"28"},{"size":9036,"mtime":1611495723893,"results":"36","hashOfConfig":"28"},{"size":1339,"mtime":1610650265296,"results":"37","hashOfConfig":"28"},{"size":1055,"mtime":1610650181038,"results":"38","hashOfConfig":"28"},{"size":1975,"mtime":1611246160884,"results":"39","hashOfConfig":"28"},{"size":4185,"mtime":1611465835352,"results":"40","hashOfConfig":"28"},{"size":676,"mtime":1611466211076,"results":"41","hashOfConfig":"28"},{"size":5972,"mtime":1610799309147,"results":"42","hashOfConfig":"28"},{"size":1939,"mtime":1610735221138,"results":"43","hashOfConfig":"28"},{"size":1113,"mtime":1611465903350,"results":"44","hashOfConfig":"28"},{"size":3057,"mtime":1610706918659,"results":"45","hashOfConfig":"28"},{"size":671,"mtime":1610651427601,"results":"46","hashOfConfig":"28"},{"size":4907,"mtime":1611058696447,"results":"47","hashOfConfig":"28"},{"size":1439,"mtime":1610643574515,"results":"48","hashOfConfig":"28"},{"size":2671,"mtime":1611057932042,"results":"49","hashOfConfig":"28"},{"size":2315,"mtime":1610706918679,"results":"50","hashOfConfig":"28"},{"size":2877,"mtime":1610706918641,"results":"51","hashOfConfig":"28"},{"size":896,"mtime":1611294429705,"results":"52","hashOfConfig":"28"},{"size":1725,"mtime":1611302707050,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"mj923w",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"56"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"56"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"56"},"C:\\Users\\vogia\\WebstormProjects\\movie_theater_management_system\\client\\src\\index.js",[],["124","125"],"C:\\Users\\vogia\\WebstormProjects\\movie_theater_management_system\\client\\src\\App.js",[],"C:\\Users\\vogia\\WebstormProjects\\movie_theater_management_system\\client\\src\\reportWebVitals.js",[],"C:\\Users\\vogia\\WebstormProjects\\movie_theater_management_system\\client\\src\\navigation.jsx",["126"],"import React, {Component} from 'react';\r\nimport {Link, navigate} from \"@reach/router\"\r\nimport {Menu, Dropdown, Button} from \"antd\";\r\nimport {UserOutlined,LogoutOutlined} from \"@ant-design/icons\"\r\nclass Navigation extends Component {\r\n    clickLogout = () => {\r\n        navigate(\"/login\")\r\n        this.props.handleLogout();\r\n    }\r\n\r\n    clickProfile = () => {\r\n        const id = localStorage.getItem(\"id\")\r\n        navigate(\"/user/\" + id)\r\n    }\r\n\r\n\r\n    Menu = <Menu>\r\n        <Menu.Item onClick={this.clickProfile} key=\"2\" icon={<UserOutlined />}>\r\n           Profile\r\n        </Menu.Item>\r\n        <hr/>\r\n        <Menu.Item key=\"1\" onClick={this.clickLogout} icon={<LogoutOutlined />}>\r\n            Logout\r\n        </Menu.Item>\r\n    </Menu>\r\n\r\n    render() {\r\n        return (\r\n            <nav className=\"container-fluid navbar navbar-expand-lg navbar-light bg-light sticky-top\" style={{}}>\r\n                <Link to={'/'} className=\"navbar-brand\" >Movie TT</Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\r\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"/>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item active mr-2\">\r\n                            <Link to={\"/\"}  className=\"text-black-50\">\r\n                            Home\r\n                            </Link>\r\n                        </li>\r\n                        { !this.props.isLogged === true ?\r\n                            <li className=\"nav-item active mr-2\">\r\n                                <Link to={\"login\"} className=\"text-black-50\">\r\n                                    Login\r\n                                </Link>\r\n                            </li> : null}\r\n\r\n                        { !this.props.isLogged === true ?\r\n                            <li className=\"nav-item active\">\r\n                                <Link to={\"register\"} className=\"text-black-50\">\r\n                                    Register\r\n                                </Link>\r\n                            </li> : null}\r\n\r\n                    </ul>\r\n                    { this.props.isLogged === true ?\r\n                        <div className={'d-inline-flex mr-5'}>\r\n                            <Dropdown.Button  overlay={this.Menu} placement=\"bottomCenter\" icon={<UserOutlined />}>\r\n                            </Dropdown.Button>\r\n                        </div>\r\n                         : null}\r\n\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Navigation;\r\n","C:\\Users\\vogia\\WebstormProjects\\movie_theater_management_system\\client\\src\\components\\login\\LoginPage.jsx",[],"C:\\Users\\vogia\\WebstormProjects\\movie_theater_management_system\\client\\src\\components\\login\\RegisterPage.jsx",[],"C:\\Users\\vogia\\WebstormProjects\\movie_theater_management_system\\client\\src\\localVariables.js",[],"C:\\Users\\vogia\\WebstormProjects\\movie_theater_management_system\\client\\src\\components\\HomePage.jsx",["127","128","129","130"],"import React, {Component} from 'react';\r\nimport {Carousel, List} from \"antd\";\r\nimport CardView from \"./CardView/CardView\";\r\nimport ListCard from \"./CardView/ListCard\";\r\nimport axios from \"axios\";\r\nimport variables from \"../localVariables\";\r\nimport HomePageCarousel from \"./carousel/HomePageCarousel\";\r\nimport CategoryList from \"./category/CategoryList\";\r\nclass HomePage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            movies: {},\r\n            render: false\r\n        }\r\n        this.fetchMovies = this.fetchMovies.bind(this)\r\n    }\r\n\r\n    fetchMovies() {\r\n        axios.get(variables.url).then(r => {\r\n            const data = r.data.data\r\n            this.setState({movies: data})\r\n        })\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.fetchMovies();\r\n        this.setState({render:true})\r\n    }\r\n\r\n    componentWillUpdate(nextProps, nextState, nextContext) {\r\n        if (this.state.movies !== nextState.movies && nextState.movies !== null) {\r\n            this.setState({movies: nextState.movies});\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const categories = ['Horror', 'Romance', \"Action\", \"Comedy\", \"Drama\", \"Fantasy\", \"Mystery\", \"Thriller\"]\r\n        let container = <div> </div>;\r\n        if (this.state.render){\r\n            container =  ( <div className={'container-fluid'}>\r\n                <HomePageCarousel movies={this.state.movies}/>\r\n                <div className={'container-fluid row'}>\r\n                    <CategoryList/>\r\n                    <div className={\"col-lg-9 col-md-9 col-sm-12\"}>\r\n                        <ListCard movies={this.state.movies}/>\r\n                    </div>\r\n                </div>\r\n            </div>)\r\n\r\n        }\r\n        return (\r\n          container\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomePage;\r\n","C:\\Users\\vogia\\WebstormProjects\\movie_theater_management_system\\client\\src\\components\\profile\\UserProfile.jsx",["131","132","133","134"],"import React, {Component} from 'react';\r\nimport axios from \"axios\";\r\nimport variables from \"../../localVariables\";\r\nimport LoginPage from \"../login/LoginPage\";\r\nimport {Avatar, List, Button, Tabs, Skeleton} from \"antd\";\r\nimport localVariables from \"../../localVariables\";\r\nimport UserList from \"../listItems/UserList\";\r\nimport MovieList from \"../listItems/MovieList\";\r\nimport AddNewMovieModal from \"../modal/AddNewMovieModal\";\r\nimport UserDetail from \"../modal/UserDetail\";\r\nimport PotentialUsers from \"../listItems/PotentialUsers\";\r\n\r\nconst {TabPane} = Tabs;\r\n\r\nclass UserProfile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLogged: localStorage.getItem(\"isLogged\"),\r\n            userData: null,\r\n            userId: localStorage.getItem(\"id\"),\r\n            history: {},\r\n            movies: [],\r\n            render: false,\r\n            type: '',\r\n            userList: {},\r\n            spend: {}\r\n        }\r\n        this.fetchUser = this.fetchUser.bind(this);\r\n        this.fetchHistory = this.fetchHistory.bind(this);\r\n        this.changeUserType = this.changeUserType.bind(this);\r\n        this.fetchMovies = this.fetchMovies.bind(this);\r\n        this.fetchUserList = this.fetchUserList.bind(this);\r\n        this.fetchUserSpend = this.fetchUserSpend.bind(this);\r\n    }\r\n\r\n\r\n    async fetchUser() {\r\n        let userId = this.state.userId;\r\n        let config = {\r\n            headers: {'user': 'JWT '},\r\n            params: {\r\n                id: userId,\r\n            },\r\n        }\r\n\r\n        await axios.get(variables.userUrl, config).then(res => {\r\n            if (res.data.data.length > 0) {\r\n                this.setState({userData: res.data.data[0]})\r\n            }\r\n        })\r\n    }\r\n\r\n    async fetchUserList() {\r\n        await axios.get(variables.userList).then(res => {\r\n            if (res.data.data.length > 0) {\r\n                this.setState({userList: res.data.data})\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    async fetchHistory() {\r\n        let userId = this.state.userId;\r\n        let config = {\r\n            headers: {'history': 'history'},\r\n            params: {\r\n                id: userId\r\n            }\r\n        }\r\n        await axios.get(variables.historyUrl, config).then(res => {\r\n            if (res.data.data.length > 0 || res !== null) {\r\n                this.setState({history: res.data.data})\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    changeUserType() {\r\n        const type = this.state.userData.type;\r\n        if (type === 99) {\r\n            this.setState({type: 'admin'})\r\n        }\r\n        if (type === 1) {\r\n            this.setState({type: 'user'})\r\n        }\r\n    }\r\n\r\n    fetchMovies() {\r\n        axios.get(variables.url).then(r => {\r\n            this.setState({movies: r.data.data})\r\n        })\r\n    }\r\n\r\n    async fetchUserSpend() {\r\n        await axios.get(variables.userSpend).then(r => {\r\n            this.setState({spend: r.data.data})\r\n        })\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        if (this.state.isLogged) {\r\n            await this.fetchUser();\r\n            await this.fetchHistory();\r\n            await this.fetchUserSpend()\r\n            if (this.state.userData.type === 99) {\r\n                await this.fetchMovies();\r\n                await this.fetchUserList();\r\n            }\r\n            this.setState({render: true});\r\n            this.changeUserType();\r\n        }\r\n    }\r\n\r\n\r\n    componentWillUpdate(nextProps, nextState, nextContext) {\r\n        if (this.state.userData !== nextState.userData) {\r\n            this.setState({userData: nextState.userData})\r\n        }\r\n\r\n    }\r\n\r\n    dateString(targetTime) {\r\n        targetTime = new Date(targetTime)\r\n        return targetTime.getHours() + ':' + targetTime.getMinutes() + ':' + targetTime.getSeconds() + ' ' +\r\n            targetTime.getDate() + '-' + (parseInt(targetTime.getMonth()) + 1) + '-' + targetTime.getFullYear()\r\n    }\r\n\r\n    render() {\r\n        // const name = this.state.userData.name;\r\n        let container = <div></div>\r\n        console.log(this.state.userList)\r\n        const arr = [\"User List\", \"Movie List\", \"Potential Customers\"]\r\n        if (this.state.render) {\r\n            const dataSource = {\r\n                \"User List\": this.state.userList,\r\n                \"Movie List\": this.state.movies,\r\n                \"Potential Customers\": this.state.spend\r\n\r\n            }\r\n            console.log(this.state.movies)\r\n            const name = this.state.userData.name;\r\n            const data = this.state.history;\r\n            const isAdmin = this.state.userData.type === 99;\r\n            container =\r\n                <div className={'row'}>\r\n                    <div className={'col-lg-4 col-md-4 col-sm-12 bg-light'}\r\n                         style={{\r\n                             minHeight: '100vh',\r\n                             height: '100%',\r\n                             display: \"flex\",\r\n                             flexFlow: 'column nowrap',\r\n                             alignItems: 'center'\r\n                         }}>\r\n                        <h3> User Profile </h3>\r\n                        <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\r\n                                style={{width: '100px', height: '100px'}}/>\r\n                        <h5> {name} </h5>\r\n                        <UserDetail isAdmin={isAdmin} data={this.state.userData}/>\r\n                    </div>\r\n\r\n                    {this.state.type === 'user' ? <div className={'col-lg-8 col-md-8 col-sm-12'}>\r\n                        <h3 className={''}> Booking History </h3>\r\n                        <div>\r\n                            <List\r\n                                itemLayout=\"horizontal\"\r\n                                dataSource={data}\r\n                                renderItem={item => (\r\n                                    <List.Item>\r\n                                        <List.Item.Meta\r\n                                            avatar={\r\n                                                <div>\r\n                                                    <img style={{width: '250px'}} src={item.image}/>\r\n                                                </div>\r\n                                            }\r\n                                            title={<a className={'d-table'}\r\n                                                      href=\"https://ant.design\">{item.title}</a>}\r\n                                            description={<div><h6> You have booked {item.count} tickets for the\r\n                                                film {item.name} on {this.dateString(item.starting_time)}</h6>\r\n                                                <h6> Total Price: {(item.count * item.price).toFixed(2)}$ </h6>\r\n                                            </div>}\r\n                                        />\r\n                                    </List.Item>\r\n                                )}\r\n                            />\r\n                        </div>\r\n                    </div> : null\r\n                    }\r\n                    {\r\n                        this.state.type === 'admin' ?\r\n                            <div className={'col-lg-8 col-md-8 col-sm-12'}>\r\n                                <Tabs centered defaultActiveKey=\"1\" tabPosition={'top'}>\r\n                                    {arr.map(i => (\r\n                                        <TabPane tab={`${i}`} key={i} className={'container-fluid '}>\r\n                                            <List\r\n                                                bordered\r\n                                                className=\"demo-loadmore-list pr-3\"\r\n                                                itemLayout=\"horizontal\"\r\n                                                dataSource={dataSource[i]}\r\n                                                renderItem={item => (\r\n                                                    <div>\r\n                                                        {i === \"Movie List\" ? <UserList item={item}/> : null\r\n                                                        }\r\n                                                        {i === \"User List\" ? <MovieList item={item}/> : null\r\n                                                        }\r\n                                                        {i=== \"Potential Customers\" ? <PotentialUsers item={item}/> : null}\r\n                                                    </div>\r\n                                                )}\r\n                                            > {i === 'Movie List' ? <AddNewMovieModal/> : null} </List>\r\n                                        </TabPane>\r\n                                    ))}\r\n                                </Tabs>\r\n                            </div>\r\n                            : null\r\n                    }\r\n                </div>\r\n\r\n        }\r\n        return (\r\n            this.state.isLogged ?\r\n                container : <LoginPage/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserProfile;\r\n","C:\\Users\\vogia\\WebstormProjects\\movie_theater_management_system\\client\\src\\components\\CardView\\CardView.jsx",["135","136","137","138","139","140","141"],"import React, {Component} from 'react';\r\nimport {Card, Avatar, Button} from \"antd\"\r\nimport {UserOutlined, EditOutlined, EllipsisOutlined} from \"@ant-design/icons\";\r\nimport {navigate} from \"@reach/router\";\r\n\r\nclass CardView extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleClickCard = this.handleClickCard.bind(this);\r\n    }\r\n    handleClickCard(){\r\n        navigate(\"movie/\" + this.props.data.id)\r\n    }\r\n    render() {\r\n        const isLogged = localStorage.getItem(\"isLogged\") === 'true';\r\n        const data = this.props.data\r\n        const {Meta} = Card;\r\n        return (\r\n            <Card\r\n                className={'p-2'}\r\n                style={{width: 300}}\r\n                cover={\r\n                    <img\r\n                        alt=\"movie image\"\r\n                        src={data.image}\r\n                        onClick={this.handleClickCard}\r\n                        style={{cursor:'pointer', height:'150px'}}\r\n                    />\r\n                }\r\n            >\r\n                <Meta\r\n                    title={data.name}\r\n                    onClick={this.handleClickCard}\r\n                    style={{cursor:\"pointer\"}}\r\n                    description={data.short_description}\r\n                />\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CardView;\r\n","C:\\Users\\vogia\\WebstormProjects\\movie_theater_management_system\\client\\src\\components\\CardView\\ListCard.jsx",["142","143","144","145","146"],"import React, {Component} from 'react';\r\nimport CardView from \"./CardView\";\r\nimport axios from \"axios\";\r\nimport variables from \"../../localVariables\";\r\nimport {Modal} from 'antd';\r\nimport {navigate} from \"@reach/router\";\r\nclass ListCard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            cardList: null,\r\n        }\r\n    }\r\n\r\n    handlePreviewItem(){\r\n\r\n    }\r\n\r\n\r\n\r\n    componentWillUpdate(nextProps, nextState, nextContext) {\r\n         if (this.props.movies === null || (nextProps.movies != null && nextProps.movies !== this.props.movies) ){\r\n             let i = 0;\r\n            this.setState({\r\n                    cardList:  nextProps.movies.map(item => (\r\n                        <CardView name={item.id}  className={'m-2 col-lg-3 col-md-6 col-sm-12'} data={item}/>))\r\n                })\r\n\r\n    }}\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className={\"container row\"}>\r\n                {this.state.cardList}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ListCard;\r\n","C:\\Users\\vogia\\WebstormProjects\\movie_theater_management_system\\client\\src\\components\\carousel\\HomePageCarousel.jsx",["147"],"import React, {Component} from 'react';\r\nimport {Carousel} from \"antd\";\r\n\r\nclass HomePageCarousel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.contentStyle = {\r\n            height: '190px',\r\n            color: '#fff',\r\n            lineHeight: '190px',\r\n            textAlign: 'center',\r\n            background: '#364d79',\r\n        }\r\n        this.state = {\r\n            arrCarouselItems: [],\r\n            movies: [],\r\n            render:false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    componentWillUpdate(nextProps, nextState, nextContext) {\r\n        if (this.props.movies !== nextProps.movies || this.state.movies.length===0){\r\n            this.setState({\r\n                movies: nextProps.movies,\r\n                render: true\r\n            })\r\n            let size = nextProps.movies.length;\r\n            let data = nextProps.movies;\r\n            let arr = []\r\n            for (let i = 0; i < 4; i++){\r\n                const contentStyle = {\r\n                    height: '190px',\r\n                    color: 'white',\r\n                    lineHeight:'190px',\r\n                    textAlign: 'center',\r\n                    background: \"url('\" + data[i].image,}\r\n                    arr.push( <div>\r\n                        <h3 style={contentStyle} className={'p-5 bg-dark'}  > {data[i].name}</h3>\r\n                    </div>)\r\n            }\r\n            this.setState({arrCarouselItems: arr})\r\n            console.log(this.state.arrCarouselItems)\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        let renderContainer = <div> </div>;\r\n        if (this.state.render){\r\n            renderContainer =( <Carousel centered style={{height: '200px'}} dotPosition={\"Bottom\"} autoplay>\r\n                {this.state.arrCarouselItems}\r\n            </Carousel>)\r\n            console.log(this.state.arrCarouselItems)\r\n        }\r\n        return (\r\n            renderContainer\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomePageCarousel;\r\n","C:\\Users\\vogia\\WebstormProjects\\movie_theater_management_system\\client\\src\\components\\CardView\\CardDetail.jsx",["148","149","150","151"],"import React, {Component} from 'react';\r\nimport axios from \"axios\";\r\nimport variables from \"../../localVariables\";\r\nimport CategoryList from \"../category/CategoryList\";\r\nimport {Button, Dropdown, Menu} from \"antd\";\r\nimport {DownOutlined} from \"@ant-design/icons\"\r\nimport SeatBookingModal from \"../modal/SeatBookingModal\";\r\nimport {Link} from \"@reach/router\";\r\n\r\nclass CardDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            detail: {},\r\n            currentIndex: 0,\r\n            render: false,\r\n        }\r\n        this.fetchMovie = this.fetchMovie.bind(this);\r\n        this.setCurrentIndex = this.setCurrentIndex.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.fetchMovie();\r\n        this.setState({render: true})\r\n    }\r\n\r\n    async fetchMovie() {\r\n        const id = this.props.id;\r\n        let config = {\r\n            headers: {'cardDetail': 'Detail'},\r\n            params: {\r\n                id: id,\r\n            },\r\n        }\r\n        await axios.get(variables.movieDetailUrl, config).then(res => {\r\n            if (res.data.data.length > 0) {\r\n                this.setState({detail: res.data.data})\r\n                console.log('data from db', res.data.data)\r\n\r\n            }\r\n        })\r\n        this.setState({render: true})\r\n    }\r\n\r\n    setCurrentIndex(e) {\r\n        this.setState({currentIndex: e.target.name})\r\n    }\r\n\r\n    componentWillUpdate(nextProps, nextState, nextContext) {\r\n        if (this.props.detail !== nextProps.detail) {\r\n            this.setState({\r\n                detail: nextState.detail\r\n            })\r\n        }\r\n    }\r\n\r\n    dateString(targetTime) {\r\n        targetTime = new Date(targetTime)\r\n        return targetTime.getDate() + '-' +( parseInt(targetTime.getMonth()) + 1) + '-' + targetTime.getFullYear()\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        let isLogged = localStorage.getItem(\"isLogged\");\r\n        let renderContainer = <div></div>\r\n        if (this.state.render) {\r\n            let MenuItems;\r\n            let i = -1;\r\n            let data = this.state.detail[this.state.currentIndex]\r\n            console.log('data', this.state.detail)\r\n\r\n            MenuItems = this.state.detail.map(item => {\r\n                i++;\r\n                return (\r\n                    <Menu.Item>\r\n                        <a name={i} onClick={this.setCurrentIndex}> {this.dateString(item.starting_time)} </a>\r\n                    </Menu.Item>)\r\n\r\n            })\r\n            const dropMenu = <Menu>\r\n                {MenuItems}\r\n            </Menu>\r\n            renderContainer = <div className={'container row'}>\r\n                <CategoryList/>\r\n                <div className={'col-lg-9 col-md-9 col-sm-12'}>\r\n                    <div className={'row'}>\r\n                        <h3 className={'w-100 text-center'}> {data.name}</h3>\r\n                        <div className={'col-lg-7 col-md-7 col-sm-12 mr-0'}>\r\n                            <img src={data.image} alt={\"movie image\"}/>\r\n                        </div>\r\n                        <div className={'col-lg-5 col-md-5 col-sm-12'}>\r\n                            <Dropdown overlay={dropMenu}>\r\n                                <a className=\"ant-dropdown-link\" style={{color: 'black'}}\r\n                                   onClick={e => e.preventDefault()}>\r\n                                    Date: {this.dateString(data.starting_time)} <DownOutlined/>\r\n                                </a>\r\n                            </Dropdown>\r\n                            <div> Price: {data.price}$ / ticket</div>\r\n                            {isLogged === 'true' ?\r\n                                <SeatBookingModal movieDetailIndex={data.id} number={data.number_viewer}/>\r\n                                : <Link to={'/login'}> Login To Book A Seat </Link>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <hr/>\r\n                    <h3> Description </h3>\r\n                    <p> {data.description} </p>\r\n\r\n                </div>\r\n            </div>\r\n        }\r\n\r\n        return (\r\n            renderContainer\r\n        );\r\n    }\r\n}\r\n\r\nexport default CardDetail;\r\n","C:\\Users\\vogia\\WebstormProjects\\movie_theater_management_system\\client\\src\\components\\category\\CategoryList.jsx",[],"C:\\Users\\vogia\\WebstormProjects\\movie_theater_management_system\\client\\src\\components\\modal\\SeatBookingModal.jsx",["152","153","154"],"import React, {Component} from 'react';\r\nimport {Button, Modal} from 'antd'\r\nimport {UserOutlined} from '@ant-design/icons'\r\nimport Seat from \"../seat/Seat\";\r\nimport axios from \"axios\";\r\nimport variables from \"../../localVariables\";\r\nimport localVariables from \"../../localVariables\";\r\nimport {navigate} from \"@reach/router\";\r\n\r\nclass SeatBookingModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visible: false,\r\n            bookingSeats: [],\r\n            bookedSeats: [],\r\n            bookedUsers: [],\r\n            render: false,\r\n            loading: false,\r\n            userIndex: localStorage.getItem(\"id\"),\r\n            movieDetailIndex: 1\r\n        }\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.handleAddSeat = this.handleAddSeat.bind(this);\r\n        this.handleRemoveSeat = this.handleRemoveSeat.bind(this);\r\n        this.isInclude = this.isInclude.bind(this);\r\n        this.fetchSeat = this.fetchSeat.bind(this);\r\n        this.onOkHandler = this.onOkHandler.bind(this);\r\n        this.isSelfBooked = this.isSelfBooked.bind(this);\r\n        this.showModal = this.showModal.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.componentWillUpdate = this.componentWillUpdate.bind(this)\r\n    }\r\n\r\n    async componentWillUpdate(nextProps, nextState, nextContext) {\r\n        if (nextProps.movieDetailIndex !== this.props.movieDetailIndex){\r\n            const empty = []\r\n            this.setState({movieDetailIndex: nextProps.movieDetailIndex})\r\n            this.setState({render:false})\r\n            this.setState({bookedSeats: empty})\r\n            console.log('changed', this.state.movieDetailIndex, nextProps.movieDetailIndex)\r\n            console.log(this.state.movieDetailIndex)\r\n            console.log(nextProps.movieDetailIndex)\r\n            await this.fetchSeat(nextProps.movieDetailIndex);\r\n            this.setState({render:true})\r\n        }\r\n    }\r\n\r\n\r\n\r\n    showModal(){\r\n        this.setState({\r\n            visible:true\r\n        })\r\n    }\r\n\r\n\r\n    handleCancel() {\r\n        this.setState({visible: false})\r\n    }\r\n\r\n    handleAddSeat(seatIndex) {\r\n        this.setState({\r\n            bookingSeats: [...this.state.bookingSeats, seatIndex]\r\n        })\r\n        // console.log(this.props.movieDetailIndex)\r\n        // console.log(this.state.bookingSeats)\r\n        // console.log(this.state.user_index)\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        this.setState({movieDetailIndex: this.props.movieDetailIndex})\r\n        this.setState({user_index: localStorage.getItem('id')})\r\n        await this.fetchSeat(this.props.movieDetailIndex).then(() => this.setState({render: true})\r\n        );\r\n    }\r\n\r\n\r\n\r\n\r\n    async fetchSeat(id) {\r\n        const emptyArr = []\r\n        this.setState({bookedSeats: emptyArr})\r\n        this.setState({bookedUsers: emptyArr})\r\n        let config = {\r\n            headers: {'bookDetail': 'Detail'},\r\n            params: {\r\n                id: id\r\n            },\r\n        }\r\n        await axios.get(variables.movieIndex, config).then(res => {\r\n            for (let seat of res.data.data) {\r\n                this.setState({bookedSeats: [...this.state.bookedSeats, {\r\n                    seat: seat.seat_index, user_index: seat.user_index\r\n                    }]})\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    handleRemoveSeat(seatIndex) {\r\n        let newArr = []\r\n        for (let item of this.state.bookingSeats) {\r\n            if (item !== seatIndex) newArr.push(item)\r\n        }\r\n        this.setState({bookingSeats: newArr})\r\n    }\r\n\r\n    isInclude(seatIndex) {\r\n        for (let item of this.state.bookedSeats) {\r\n            if (item.seat === seatIndex) return true\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    async onOkHandler() {\r\n        if (this.state.bookingSeats.length ===0)\r\n        {\r\n            this.props.handleCancelModal();\r\n            this.setState({visible:false})\r\n        }\r\n        else\r\n        {\r\n            this.setState({loading: true})\r\n            for (let item of this.state.bookingSeats) {\r\n                 axios.post(localVariables.movieIndex, {\r\n                    movieIndex: this.state.movieDetailIndex,\r\n                    seatIndex: item,\r\n                    userIndex: this.state.user_index\r\n                })\r\n            }\r\n            setTimeout(() => {\r\n                window.location.reload();\r\n                this.setState({visible:false})\r\n            }, 1000)\r\n        }\r\n\r\n    }\r\n    isSelfBooked(seatIndex){\r\n        for (let item of this.state.bookedSeats){\r\n            if (item.seat=== seatIndex && item.user_index == localStorage.getItem(\"id\")) return true;\r\n        }\r\n        return false\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        let container = <div></div>\r\n        if (this.state.render) {\r\n            let arrSeat = [];\r\n\r\n            for (let i = 1; i <= this.props.number; i++) {\r\n                arrSeat.push((<Seat available={!this.isInclude(i)} handleRemoveSeat={this.handleRemoveSeat}\r\n                                    handleAddSeat={this.handleAddSeat} isSelfBooked={this.isSelfBooked(i)} name={i} selected={false} size={'largest'}/>\r\n                ))\r\n            }\r\n            container =\r\n                <div>\r\n                <Button onClick={this.showModal} > Choose A Seat </Button>\r\n\r\n            <Modal style={{height: '50vh', overFlowY: 'scroll'}} title=\"Basic Modal\" visible={this.state.visible}\r\n                       onOk={this.onOkHandler}\r\n                       onCancel={this.handleCancel}\r\n                       confirmLoading={this.state.loading}>\r\n                    <h6 className={'text-center offset-4 col-4 mb-5'}\r\n                        style={{borderBottom: '1px solid black'}}>Screen</h6>\r\n                    {arrSeat}\r\n                </Modal>\r\n                </div>\r\n        }\r\n        return (\r\n                container\r\n        );\r\n    }\r\n}\r\n\r\nexport default SeatBookingModal;\r\n","C:\\Users\\vogia\\WebstormProjects\\movie_theater_management_system\\client\\src\\components\\seat\\Seat.jsx",[],"C:\\Users\\vogia\\WebstormProjects\\movie_theater_management_system\\client\\src\\components\\listItems\\UserList.jsx",["155","156","157","158"],"import React, {Component} from 'react';\r\nimport {List, Skeleton} from \"antd\";\r\nimport UserDetail from '../modal/UserDetail'\r\nimport MovieDetailModal from \"../modal/MovieDetailModal\";\r\nimport MovieDeleteModal from \"../modal/MovieDeleteModal\";\r\n\r\nclass UserList extends Component {\r\n\r\n\r\n\r\n    render() {\r\n        const item = this.props.item\r\n        return (\r\n            <List.Item\r\n                actions={[<MovieDetailModal item={this.props.item}/>]}\r\n            >\r\n                <Skeleton  avatar title={false} loading={item.loading} active>\r\n                    <List.Item.Meta\r\n                        className={'col-lg-3 col-md-6 col-sm-12'}\r\n                        avatar={\r\n                            <div >\r\n                                <img  style={{width:'250px'}} src={item.image} />\r\n                            </div>\r\n                        }\r\n                        title={<a>{item.name}</a>}\r\n                        description={item.short_description}\r\n                    />\r\n                </Skeleton>\r\n            </List.Item>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserList;\r\n","C:\\Users\\vogia\\WebstormProjects\\movie_theater_management_system\\client\\src\\components\\modal\\UserDetail.jsx",["159"],"import React, {Component} from 'react';\r\nimport {Modal, Input} from 'antd'\r\nimport axios from \"axios\";\r\nimport localVariables from \"../../localVariables\";\r\n\r\nclass UserDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visible: false,\r\n            name: '',\r\n            phone: '',\r\n            email: '',\r\n            address: '',\r\n            type: 1,\r\n            id: 0,\r\n        }\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.handleOke = this.handleOke.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.showModal = this.showModal.bind(this);\r\n        this.updateUser = this.updateUser.bind(this);\r\n    }\r\n\r\n\r\n    handleCancel() {\r\n        this.setState({visible: false})\r\n    }\r\n\r\n    handleOke() {\r\n\r\n    }\r\n\r\n    showModal(){\r\n        this.setState({visible:true})\r\n    }\r\n\r\n    setupData(){\r\n        this.setState({\r\n            name: this.props.data.name,\r\n            phone: this.props.data.phone,\r\n            email: this.props.data.email,\r\n            address: this.props.data.address,\r\n            type: this.props.data.type,\r\n            id: this.props.data.user_id\r\n        })\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setupData();\r\n    }\r\n\r\n    updateUser(){\r\n        const config = {\r\n            headers: {'bookDetail': 'Detail'},\r\n            params: {\r\n                id: this.state.id,\r\n                name: this.state.name,\r\n                phone: this.state.phone,\r\n                email: this.state.email,\r\n                address: this.state.address,\r\n                type: this.state.type\r\n            },\r\n        }\r\n        axios.put(localVariables.updateUser, config).then(res => {\r\n            console.log(res)\r\n        })\r\n\r\n        this.setState({\r\n            visible:false\r\n        })\r\n        setTimeout(() => window.location.reload(), 500)\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <a onClick={this.showModal} className={'mx-2'} key=\"list-loadmore-edit\">edit</a>\r\n            <Modal onOk={this.updateUser} title={'User Information'} onCancel={this.handleCancel} visible={this.state.visible}>\r\n                <Input prefix={'Name: '} name={'name'} onChange={this.handleChange} value={this.state.name} />\r\n                <Input prefix={'Phone: '} name={'phone'} onChange={this.handleChange} value={this.state.phone} />\r\n                <Input prefix={'Email: '} name={'email'} onChange={this.handleChange} value={this.state.email}/>\r\n                <Input prefix={'Address: '} name={'address'} onChange={this.handleChange} value={this.state.address}/>\r\n                { this.props.isAdmin ? <Input prefix={'User Type: '} name={'type'} onChange={this.handleChange} value={this.state.type}/> : null}\r\n            </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserDetail;\r\n","C:\\Users\\vogia\\WebstormProjects\\movie_theater_management_system\\client\\src\\components\\listItems\\MovieList.jsx",["160"],"import React, {Component} from 'react';\r\nimport {List, Skeleton} from \"antd\";\r\nimport UserDetail from \"../modal/UserDetail\";\r\n\r\nclass MovieList extends Component {\r\n\r\n\r\n    render() {\r\n        const item = this.props.item\r\n        return (\r\n            <List.Item\r\n                actions={[<UserDetail  data={item}/>]}\r\n            >\r\n                <Skeleton title={false} loading={item.loading} active>\r\n                    <List.Item.Meta\r\n                        className={'row'}\r\n                        avatar={<a>{item.name}</a>}\r\n                    />\r\n                </Skeleton>\r\n            </List.Item>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MovieList;\r\n","C:\\Users\\vogia\\WebstormProjects\\movie_theater_management_system\\client\\src\\components\\modal\\MovieDetailModal.jsx",["161","162","163","164","165"],"import React, {Component} from 'react';\r\nimport {Input, Modal, Button} from \"antd\";\r\nimport axios from \"axios\";\r\nimport localVariables from \"../../localVariables\";\r\nimport ShowTime from \"../showtime/ShowTime\";\r\nimport {PlusCircleOutlined} from \"@ant-design/icons\"\r\nimport ShowTimeModal from \"./ShowTimeModal\";\r\nimport AddNewScreeningModal from \"./AddNewScreeningModal\";\r\nclass MovieDetailModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visible: false,\r\n            showTimes: [],\r\n            movieViewer: [],\r\n            id: 0,\r\n            name: '',\r\n            description: '',\r\n            short_description: '',\r\n            category_id: '',\r\n            image: '',\r\n            render: false,\r\n            confirmLoading:false\r\n\r\n        }\r\n        this.showModal = this.showModal.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this)\r\n        this.setupData = this.setupData.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.fetchShowTime = this.fetchShowTime.bind(this)\r\n    }\r\n\r\n    showModal() {\r\n        this.setState({visible: true})\r\n    }\r\n\r\n    handleCancel() {\r\n        this.setState({visible: false})\r\n    }\r\n\r\n    setupData() {\r\n        const item = this.props.item\r\n        this.setState({\r\n            id: item.id,\r\n            name: item.name,\r\n            description: item.description,\r\n            short_description: item.short_description,\r\n            category_id: item.category_id,\r\n            image: item.image,\r\n        })\r\n    }\r\n\r\n    handleSubmit() {\r\n        const config = {\r\n            headers: {'bookDetail': 'Detail'},\r\n            params: {\r\n                id: this.state.id,\r\n                name: this.state.name,\r\n                description: this.state.description,\r\n                short_description: this.state.short_description,\r\n                category_id: this.state.category_id,\r\n                image: this.state.image\r\n            },\r\n        }\r\n        console.log(config)\r\n        axios.put(localVariables.updateMovie, config).then(res => {\r\n            console.log(res)\r\n        })\r\n\r\n        this.setState({\r\n            confirmLoading: true,\r\n            visible: false\r\n        })\r\n        setTimeout(() => window.location.reload(), 1500)\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.setupData();\r\n        console.log('id' + this.state.id)\r\n        await this.fetchShowTime();\r\n        this.setState({render: true})\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n    async fetchShowTime() {\r\n        let config = {\r\n            headers: {'Movie': 'detail'},\r\n            params: {\r\n                id:this.props.item.id\r\n            }\r\n        }\r\n        await axios.get(localVariables.movieDetailUrl, config).then(res => {\r\n            this.setState({showTimes: res.data.data})\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const item = this.props.item;\r\n        let container = <div></div>;\r\n        if (this.state.render) {\r\n            container = <div>\r\n                <a  onClick={this.showModal} className={'mx-2'} key=\"list-loadmore-edit\">edit</a>\r\n                <Modal confirmLoading={this.state.confirmLoading}  onOk={this.handleSubmit} visible={this.state.visible} onCancel={this.handleCancel} title={item.name}>\r\n                    <h3>Movie Title: </h3>\r\n                    <Input prefix={'Name: '} name={'name'} onChange={this.handleChange} value={this.state.name}/>\r\n                    <h3> Short Description</h3>\r\n                    <Input.TextArea style={{height: '20vh'}} prefix={'Short Description: '} name={'short_description'}\r\n                                    onChange={this.handleChange} value={this.state.short_description}/>\r\n                    <h3> Description: </h3>\r\n                    <Input.TextArea style={{height: '40vh'}} prefix={'Description: '} name={'description'}\r\n                                    onChange={this.handleChange} value={this.state.description}/>\r\n                    <h3> Category ID: </h3>\r\n                    <Input prefix={'Category ID: '} name={'category_id'} onChange={this.handleChange}\r\n                           value={this.state.category_id}/>\r\n                    <h3> Image Url: </h3>\r\n                    <Input prefix={'Image Url: '} name={'image'} onChange={this.handleChange} value={this.state.image}/>\r\n                    <img src={this.state.image} alt={'movie image'}/>\r\n                    <h3 className={'mb-1'}> Screening:  </h3>\r\n                    <ShowTime  showTimes={this.state.showTimes}/>\r\n                    <AddNewScreeningModal id={this.state.id}/>\r\n                </Modal>\r\n            </div>\r\n        }\r\n        return (\r\n            container\r\n        );\r\n    }\r\n}\r\n\r\nexport default MovieDetailModal;\r\n","C:\\Users\\vogia\\WebstormProjects\\movie_theater_management_system\\client\\src\\components\\showtime\\ShowTime.jsx",["166","167","168","169"],"import React, {Component} from 'react';\r\nimport {  Input, Modal } from 'antd';\r\nimport ShowTimeModal from \"../modal/ShowTimeModal\";\r\nimport axios from \"axios\";\r\nimport localVariables from \"../../localVariables\";\r\n\r\nclass ShowTime extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showTimes: this.props.showTimes\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.setState({\r\n            showTimes: this.props.showTimes\r\n        })\r\n    }\r\n\r\n\r\n    onFinish(values){\r\n        console.log(values)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const data = this.state.showTimes;\r\n        const dataContainer = data.map(item => (\r\n            <div className={'row'}>\r\n                <p className={'col-5'}> {item.starting_time}</p>\r\n                <p className={'col-2'}> {item.price}$</p>\r\n                <p className={'col-2'}> {item.number_viewer}</p>\r\n                <ShowTimeModal item={item} convertDay={this.convertDay}/>\r\n            </div>\r\n\r\n        ))\r\n        return (\r\n            <div className={'container-fluid'}>\r\n                <div className={'row'}>\r\n                    <p className={'col-5'}> Starting Time</p>\r\n                    <p className={'col-2'}> Price</p>\r\n                    <p className={'col-3'}> Max Viewers</p>\r\n                </div>\r\n                {dataContainer}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShowTime;\r\n","C:\\Users\\vogia\\WebstormProjects\\movie_theater_management_system\\client\\src\\components\\modal\\ShowTimeModal.jsx",["170"],"import React, {Component} from 'react';\r\nimport {Input, Modal} from \"antd\";\r\nimport axios from \"axios\";\r\nimport localVariables from \"../../localVariables\";\r\n\r\nclass ShowTimeModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visible: false,\r\n            starting_time: '',\r\n            price: 0.00,\r\n            number_viewer: 0,\r\n            id: 0\r\n        }\r\n        this.showModal = this.showModal.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.setupData = this.setupData.bind(this);\r\n        this.updateScreening = this.updateScreening.bind(this);\r\n    }\r\n\r\n\r\n    showModal(){\r\n        this.setState({visible: true})\r\n    }\r\n\r\n    handleChange(e){\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n    handleCancel(){\r\n        this.setState({visible:false})\r\n    }\r\n    setupData(){\r\n        const data = this.props.item;\r\n        this.setState({\r\n            starting_time: data.starting_time,\r\n            price: data.price,\r\n            number_viewer: data.number_viewer,\r\n            id:data.id\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        this.setupData();\r\n    }\r\n\r\n\r\n    updateScreening(){\r\n        const config = {\r\n            headers: {'movieDetail': 'Detail'},\r\n            params: {\r\n                id: this.state.id,\r\n                starting_time:this.state.starting_time,\r\n                price: this.state.price,\r\n                number_viewer: this.state.number_viewer,\r\n            },\r\n        }\r\n        axios.put(localVariables.updateScreening, config).then(res => {\r\n            console.log(res)\r\n        })\r\n        this.setState({\r\n            visible:false\r\n        })\r\n        setTimeout(() => window.location.reload(), 500)\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <a className={'col-3'} onClick={this.showModal}>  Edit  </a>\r\n            <Modal title={\"Modify Screening\"} onCancel={this.handleCancel} onOk={this.updateScreening} visible={this.state.visible}>\r\n                <div>\r\n                    <Input prefix={'Show Time: '} name={'starting_time'} onChange={this.handleChange} value={this.state.starting_time} />\r\n                    <Input prefix={'Price: '} suffix={'$'} name={'price'} onChange={this.handleChange} value={this.state.price} />\r\n                    <Input prefix={'Max Viewer: '} name={\"number_viewer\"} onChange={this.handleChange} value={this.state.number_viewer}  />\r\n                </div>\r\n            </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShowTimeModal;\r\n","C:\\Users\\vogia\\WebstormProjects\\movie_theater_management_system\\client\\src\\components\\modal\\AddNewScreeningModal.jsx",[],"C:\\Users\\vogia\\WebstormProjects\\movie_theater_management_system\\client\\src\\components\\modal\\AddNewMovieModal.jsx",["171","172","173"],"import React, {Component} from 'react';\r\nimport {Button, Input, Modal} from 'antd'\r\nimport ShowTime from \"../showtime/ShowTime\";\r\nimport AddNewScreeningModal from \"./AddNewScreeningModal\";\r\nimport axios from \"axios\";\r\nimport localVariables from \"../../localVariables\";\r\nclass AddNewMovieModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visible: false,\r\n            name:'movie name',\r\n            short_description: 'movie short description',\r\n            description: 'movie description',\r\n            category_id: 'category id from 1 to 9',\r\n            image: 'image url',\r\n        }\r\n        this.showModal = this.showModal.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    }\r\n    handleChange(e) {\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n    showModal() {\r\n        this.setState({visible: true})\r\n    }\r\n    handleCancel(){\r\n        this.setState({visible:false})\r\n    }\r\n\r\n    handleSubmit(){\r\n        axios.post(localVariables.addMovie, this.state).then(res => {\r\n            console.log(\"successfully add a movie!\")\r\n        })\r\n        this.setState({visible:false})\r\n        setTimeout(() => window.location.reload(), 1000)\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button onClick={this.showModal}> Add A Movie </Button>\r\n                <Modal onOk={this.handleSubmit} visible={this.state.visible} onCancel={this.handleCancel} title={\"Add New Movie\"}>\r\n                    <h5>Movie Title: </h5>\r\n                    <Input prefix={'Name: '} name={'name'} onChange={this.handleChange} value={this.state.name}/>\r\n                    <h5> Short Description</h5>\r\n                    <Input.TextArea style={{height: '20vh'}} prefix={'Short Description: '} name={'short_description'}\r\n                                    onChange={this.handleChange} value={this.state.short_description}/>\r\n                    <h5> Description: </h5>\r\n                    <Input.TextArea style={{height: '40vh'}} prefix={'Description: '} name={'description'}\r\n                                    onChange={this.handleChange} value={this.state.description}/>\r\n                    <h5> Category ID: </h5>\r\n                    <Input prefix={'Category ID: '} name={'category_id'} onChange={this.handleChange}\r\n                           value={this.state.category_id}/>\r\n                    <h5> Image Url: </h5>\r\n                    <Input prefix={'Image Url: '} name={'image'} onChange={this.handleChange} value={this.state.image}/>\r\n                    <img src={this.state.image} alt={'movie image'}/>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddNewMovieModal;\r\n","C:\\Users\\vogia\\WebstormProjects\\movie_theater_management_system\\client\\src\\components\\listItems\\PotentialUsers.jsx",["174"],"import React, {Component} from 'react';\r\nimport {List, Skeleton} from \"antd\";\r\n\r\nclass PotentialUsers extends Component {\r\n    render() {\r\n        const item = this.props.item\r\n        console.log('spend', item)\r\n        return (\r\n            <List.Item\r\n            >\r\n                <Skeleton  avatar title={false} loading={item.loading} active>\r\n                    <List.Item.Meta\r\n                        className={'col-lg-3 col-md-6 col-sm-12'}\r\n                        avatar={\r\n                            <div >\r\n                                {item.name}\r\n                            </div>\r\n                        }\r\n                        title={<a>{\"Total spend\"}</a>}\r\n                        description={item.total_spend.toFixed(2) + \"$\"}\r\n                    />\r\n                </Skeleton>\r\n            </List.Item>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PotentialUsers;\r\n","C:\\Users\\vogia\\WebstormProjects\\movie_theater_management_system\\client\\src\\components\\modal\\MovieDeleteModal.jsx",["175","176","177","178"],"import React, {Component} from 'react';\r\nimport {Input, Modal} from \"antd\";\r\nimport ShowTime from \"../showtime/ShowTime\";\r\nimport AddNewScreeningModal from \"./AddNewScreeningModal\";\r\nimport axios from \"axios\";\r\nimport localVariables from \"../../localVariables\";\r\n\r\nclass MovieDeleteModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visible: false,\r\n            confirmLoading: false,\r\n\r\n        }\r\n        this.handleCancel = this.handleCancel.bind(this)\r\n        this.showModal = this.showModal.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n     handleSubmit(){\r\n        this.setState({confirmLoading:true})\r\n         axios.delete(localVariables.deleteMovie, {params: {id: this.props.item.id}}).then(res => console.log(res))\r\n        this.setState({visible:false})\r\n        // setTimeout(() => window.location.reload(), 400)\r\n    }\r\n\r\n    showModal(){\r\n        this.setState({\r\n            visible:true\r\n        })\r\n    }\r\n\r\n    handleCancel(){\r\n        this.setState({\r\n            visible:false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const item = this.props.item\r\n        console.log('id', item.id)\r\n\r\n        return (\r\n            <div>\r\n                <a  onClick={this.showModal} style={{color:'red'}} className={'mx-2'} key=\"list-loadmore-edit\">Delete</a>\r\n                <Modal confirmLoading={this.state.confirmLoading}  onOk={this.handleSubmit} visible={this.state.visible} onCancel={this.handleCancel} title={item.name}>\r\n                    <h6> Do You Really Want To DELETE the movie {item.name} ?</h6>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MovieDeleteModal;\r\n",{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":3,"column":25,"nodeType":"185","messageId":"186","endLine":3,"endColumn":31},{"ruleId":"183","severity":1,"message":"187","line":2,"column":9,"nodeType":"185","messageId":"186","endLine":2,"endColumn":17},{"ruleId":"183","severity":1,"message":"188","line":2,"column":19,"nodeType":"185","messageId":"186","endLine":2,"endColumn":23},{"ruleId":"183","severity":1,"message":"189","line":3,"column":8,"nodeType":"185","messageId":"186","endLine":3,"endColumn":16},{"ruleId":"183","severity":1,"message":"190","line":40,"column":15,"nodeType":"185","messageId":"186","endLine":40,"endColumn":25},{"ruleId":"183","severity":1,"message":"184","line":5,"column":23,"nodeType":"185","messageId":"186","endLine":5,"endColumn":29},{"ruleId":"183","severity":1,"message":"191","line":5,"column":37,"nodeType":"185","messageId":"186","endLine":5,"endColumn":45},{"ruleId":"183","severity":1,"message":"192","line":6,"column":8,"nodeType":"185","messageId":"186","endLine":6,"endColumn":22},{"ruleId":"193","severity":1,"message":"194","line":174,"column":53,"nodeType":"195","endLine":174,"endColumn":101},{"ruleId":"183","severity":1,"message":"196","line":2,"column":15,"nodeType":"185","messageId":"186","endLine":2,"endColumn":21},{"ruleId":"183","severity":1,"message":"184","line":2,"column":23,"nodeType":"185","messageId":"186","endLine":2,"endColumn":29},{"ruleId":"183","severity":1,"message":"197","line":3,"column":9,"nodeType":"185","messageId":"186","endLine":3,"endColumn":21},{"ruleId":"183","severity":1,"message":"198","line":3,"column":23,"nodeType":"185","messageId":"186","endLine":3,"endColumn":35},{"ruleId":"183","severity":1,"message":"199","line":3,"column":37,"nodeType":"185","messageId":"186","endLine":3,"endColumn":53},{"ruleId":"183","severity":1,"message":"200","line":15,"column":15,"nodeType":"185","messageId":"186","endLine":15,"endColumn":23},{"ruleId":"201","severity":1,"message":"202","line":23,"column":21,"nodeType":"195","endLine":28,"endColumn":23},{"ruleId":"183","severity":1,"message":"203","line":3,"column":8,"nodeType":"185","messageId":"186","endLine":3,"endColumn":13},{"ruleId":"183","severity":1,"message":"204","line":4,"column":8,"nodeType":"185","messageId":"186","endLine":4,"endColumn":17},{"ruleId":"183","severity":1,"message":"205","line":5,"column":9,"nodeType":"185","messageId":"186","endLine":5,"endColumn":14},{"ruleId":"183","severity":1,"message":"206","line":6,"column":9,"nodeType":"185","messageId":"186","endLine":6,"endColumn":17},{"ruleId":"183","severity":1,"message":"207","line":23,"column":18,"nodeType":"185","messageId":"186","endLine":23,"endColumn":19},{"ruleId":"183","severity":1,"message":"208","line":30,"column":17,"nodeType":"185","messageId":"186","endLine":30,"endColumn":21},{"ruleId":"183","severity":1,"message":"184","line":5,"column":9,"nodeType":"185","messageId":"186","endLine":5,"endColumn":15},{"ruleId":"209","severity":1,"message":"210","line":77,"column":25,"nodeType":"195","endLine":77,"endColumn":68},{"ruleId":"201","severity":1,"message":"202","line":90,"column":29,"nodeType":"195","endLine":90,"endColumn":72},{"ruleId":"209","severity":1,"message":"210","line":94,"column":33,"nodeType":"195","endLine":95,"endColumn":70},{"ruleId":"183","severity":1,"message":"197","line":3,"column":9,"nodeType":"185","messageId":"186","endLine":3,"endColumn":21},{"ruleId":"183","severity":1,"message":"206","line":8,"column":9,"nodeType":"185","messageId":"186","endLine":8,"endColumn":17},{"ruleId":"211","severity":1,"message":"212","line":146,"column":59,"nodeType":"213","messageId":"214","endLine":146,"endColumn":61},{"ruleId":"183","severity":1,"message":"215","line":3,"column":8,"nodeType":"185","messageId":"186","endLine":3,"endColumn":18},{"ruleId":"183","severity":1,"message":"216","line":5,"column":8,"nodeType":"185","messageId":"186","endLine":5,"endColumn":24},{"ruleId":"193","severity":1,"message":"194","line":22,"column":33,"nodeType":"195","endLine":22,"endColumn":82},{"ruleId":"209","severity":1,"message":"210","line":25,"column":32,"nodeType":"195","endLine":25,"endColumn":35},{"ruleId":"209","severity":1,"message":"210","line":86,"column":13,"nodeType":"195","endLine":86,"endColumn":85},{"ruleId":"209","severity":1,"message":"210","line":17,"column":33,"nodeType":"195","endLine":17,"endColumn":36},{"ruleId":"183","severity":1,"message":"184","line":2,"column":23,"nodeType":"185","messageId":"186","endLine":2,"endColumn":29},{"ruleId":"183","severity":1,"message":"217","line":6,"column":9,"nodeType":"185","messageId":"186","endLine":6,"endColumn":27},{"ruleId":"183","severity":1,"message":"218","line":7,"column":8,"nodeType":"185","messageId":"186","endLine":7,"endColumn":21},{"ruleId":"209","severity":1,"message":"210","line":107,"column":17,"nodeType":"195","endLine":107,"endColumn":90},{"ruleId":"201","severity":1,"message":"202","line":122,"column":21,"nodeType":"195","endLine":122,"endColumn":70},{"ruleId":"183","severity":1,"message":"219","line":2,"column":11,"nodeType":"185","messageId":"186","endLine":2,"endColumn":16},{"ruleId":"183","severity":1,"message":"205","line":2,"column":18,"nodeType":"185","messageId":"186","endLine":2,"endColumn":23},{"ruleId":"183","severity":1,"message":"203","line":4,"column":8,"nodeType":"185","messageId":"186","endLine":4,"endColumn":13},{"ruleId":"183","severity":1,"message":"192","line":5,"column":8,"nodeType":"185","messageId":"186","endLine":5,"endColumn":22},{"ruleId":"209","severity":1,"message":"210","line":71,"column":17,"nodeType":"195","endLine":71,"endColumn":65},{"ruleId":"183","severity":1,"message":"220","line":3,"column":8,"nodeType":"185","messageId":"186","endLine":3,"endColumn":16},{"ruleId":"183","severity":1,"message":"221","line":4,"column":8,"nodeType":"185","messageId":"186","endLine":4,"endColumn":28},{"ruleId":"201","severity":1,"message":"202","line":63,"column":21,"nodeType":"195","endLine":63,"endColumn":70},{"ruleId":"209","severity":1,"message":"210","line":19,"column":32,"nodeType":"195","endLine":19,"endColumn":35},{"ruleId":"183","severity":1,"message":"219","line":2,"column":9,"nodeType":"185","messageId":"186","endLine":2,"endColumn":14},{"ruleId":"183","severity":1,"message":"220","line":3,"column":8,"nodeType":"185","messageId":"186","endLine":3,"endColumn":16},{"ruleId":"183","severity":1,"message":"221","line":4,"column":8,"nodeType":"185","messageId":"186","endLine":4,"endColumn":28},{"ruleId":"209","severity":1,"message":"210","line":46,"column":17,"nodeType":"195","endLine":46,"endColumn":112},"no-native-reassign",["222"],"no-negated-in-lhs",["223"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Carousel' is defined but never used.","'List' is defined but never used.","'CardView' is defined but never used.","'categories' is assigned a value but never used.","'Skeleton' is defined but never used.","'localVariables' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Avatar' is defined but never used.","'UserOutlined' is defined but never used.","'EditOutlined' is defined but never used.","'EllipsisOutlined' is defined but never used.","'isLogged' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'axios' is defined but never used.","'variables' is defined but never used.","'Modal' is defined but never used.","'navigate' is defined but never used.","'i' is assigned a value but never used.","'size' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'UserDetail' is defined but never used.","'MovieDeleteModal' is defined but never used.","'PlusCircleOutlined' is defined but never used.","'ShowTimeModal' is defined but never used.","'Input' is defined but never used.","'ShowTime' is defined but never used.","'AddNewScreeningModal' is defined but never used.","no-global-assign","no-unsafe-negation"]